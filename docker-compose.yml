version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chat_postgres
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - chat_network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: chat_redis
    command: redis-server --appendonly yes --requirepass redispass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - chat_network
    restart: unless-stopped

  # Chat Application
  chat_app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chat_app_dev
    command: sh -c "npx prisma migrate deploy && node dist/server.js"

    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://chatuser:chatpass@postgres:5432/chatapp
      REDIS_URL: redis://:redispass@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-dev
      CLIENT_URL: http://localhost:3000
      PORT: 5000
    ports:
      - "8000:5000"
      - "5555:5555"   # Prisma Studio
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - chat_network
    restart: unless-stopped

  frontend:
    build:
      context: ./cli
      dockerfile: Dockerfile
    container_name: chat_frontend
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:8000   # or point to backend service
    ports:
      - "3000:3000"
    volumes:
      - ./cli:/app
      - /app/node_modules
    depends_on:
      - chat_app
    networks:
      - chat_network
    restart: unless-stopped


volumes:
  postgres_data:
  redis_data:


networks:
  chat_network:
    driver: bridge
